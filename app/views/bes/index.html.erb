<!DOCTYPE html>
<html>
<head>
  <title>Hố ga/bể cáp</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://api.mapbox.com/mapbox-gl-js/v2.4.1/mapbox-gl.js"></script>
  <link href="https://api.mapbox.com/mapbox-gl-js/v2.4.1/mapbox-gl.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
  <div id="map" style="height: 90vh;"></div>
  <div class="controls">
    <button id="addLocationButton" onclick="addLocation()">Thêm</button>
    <button id="completeButton" onclick="completeLocation()" style="display: none;">Xong</button>
    <button onclick="zoomIn()">+</button>
    <button onclick="zoomOut()">-</button>
  </div>
  <div>
    <%= button_to 'Nhập dữ liệu', new_be_path, method: :get, class: 'btn btn-primary' %>
  <div>
  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoibHludGMiLCJhIjoiY2x4M2R6ajdsMHQ0ejJub21xcnMzdWJqNSJ9.nFYWpY_vjwZcPAvMeZAoKw';
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [108.220650, 16.075015], 
      zoom: 17
    });

    var bes = [
      <% @bes.each do |be| %>
        {
          id: '<%= be.id %>',
          address: '<%= j be.address %>',
          loaibe: '<%= j be.loaibe %>',
          coquan: '<%= j be.coquan %>',
          latitude: <%= be.latitude %>,
          longitude: <%= be.longitude %>
        },
      <% end %>
    ];

    var markers = [];
    bes.forEach(function(be) {
      var iconClass;
      switch (be.loaibe) {
        case 'Bể cáp 1 đan':
          iconClass = 'fa-regular fa-square';
          break;
        case 'Bể cáp 2 đan':
          iconClass = 'fa-regular fa-square-minus'; 
          break;
        case 'Hố ga':
          iconClass = 'fa-solid fa-ring';
          break;
      }
      var popupContent = '<p>Loại bể:&nbsp' + be.loaibe + '</p>' +
        '<p>Địa chỉ:&nbsp ' + be.address + '</p>' +
        '<p>Đơn vị quản lý:&nbsp ' + be.coquan + '</p>' +
        '<p>Kinh độ:&nbsp  ' + be.longitude + '</p>' +
        '<p>Vĩ độ:&nbsp ' + be.latitude + '</p>' +
        '<div class="d-flex justify-content-center" >' +
          '<button class="btn btn-primary mr-2" onclick="editBe(\'' + be.id + '\')">Chỉnh sửa</button>' +
          '<button class="btn btn-danger" onclick="deleteBe(\'' + be.id + '\')">Xóa</button>' +
        '</div>';

      // Create a custom marker with FontAwesome icon
      var markerElement = document.createElement('div');
      markerElement.className = 'map-marker';
      markerElement.innerHTML = '<i class="' + iconClass + '"></i>';

      var marker = new mapboxgl.Marker(markerElement)
        .setLngLat([be.longitude, be.latitude])
        .setPopup(new mapboxgl.Popup().setHTML(popupContent))
        .addTo(map);

      markers.push({
        id: be.id,
        marker: marker
      });
    });

    function completeLocation() {
      // Reload the page
      location.reload();
    }

    function addLocation() {
      // Allow for continuous clicking
      map.on('click', function(e) {
        var lng = e.lngLat.lng.toFixed(6);
        var lat = e.lngLat.lat.toFixed(6);
        document.getElementById('addLocationButton').style.backgroundColor = 'blue';
        // Show the "Xong" button
        document.getElementById('completeButton').style.display = 'inline-block';

        var popup = new mapboxgl.Popup({ closeOnClick: false })
          .setLngLat(e.lngLat)
          .setHTML('<form id="locationForm" class="container">' +
            '<input class="form-control" type="text" id="address" name="address" placeholder="Địa chỉ"><br>' +
            '<select class="form-control" id="loaibe" name="loaibe" required>' +
              '<option value="" disabled selected>Chọn loại bể</option>' +
              '<option value="Hố ga">Hố ga</option>' +
              '<option value="Bể cáp 1 đan">Bể cáp 1 đan</option>' +
              '<option value="Bể cáp 2 đan">Bể cáp 2 đan</option>' +
            '</select><br>' +
            '<select class="form-control" id="coquan" name="coquan" required>' +
              '<option value="" disabled selected>Đơn vị quản lý</option>' +
              '<option value="Trung tâm IID">Trung tâm IID</option>' +
              '<option value="Trung tâm đèn THGT">Trung tâm đèn THGT</option>' +
              '<option value="VNPT">VNPT</option>' +
              '<option value="Viettel">Viettel</option>' +
              '<option value="FPT">FPT</option>' +
            '</select><br>' +
            'Kinh độ: ' + lng + '<br>' +
            'Vĩ độ: ' + lat + '<br><br>' +
            '<div class="d-flex justify-content-center">'+
            '<input class="btn btn-primary" type="submit" value="Gửi">' + 
            '</div>' +
            '</form>').addTo(map);

        function onSubmitLocation(event) {
          event.preventDefault();
          var address = document.getElementById('address').value;
          var loaibe = document.getElementById('loaibe').value;
          var coquan = document.getElementById('coquan').value;

          var data = {
            address: address,
            loaibe: loaibe,
            coquan: coquan,
            latitude: lat,
            longitude: lng
          };

          fetch('/bes', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': getCSRFToken()
            },
            body: JSON.stringify({ be: data })
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(newBe => {
            popup.remove(); // Close the popup after successful submission

            var iconClass;
            switch (newBe.loaibe) {
              case 'Bể cáp 1 đan':
                iconClass = 'fa-regular fa-square';
                break;
              case 'Bể cáp 2 đan':
                iconClass = 'fa-regular fa-square-minus';
                break;
              case 'Hố ga':
                iconClass = 'fa-solid fa-ring';
                break;
              default:
                iconClass = 'fa-solid fa-circle';
            }

            var newPopupContent = '<p>ID: ' + newBe.id + '</p>' +
              '<p>' + newBe.loaibe + '</p>' +
              '<p>' + newBe.address + '</p>' +
              '<p>' + newBe.coquan + '</p>' +
              '<p>Kinh độ: ' + newBe.longitude + '</p>' +
              '<p>Vĩ độ: ' + newBe.latitude + '</p>';

            var newMarkerElement = document.createElement('div');
            newMarkerElement.className = 'map-marker';
            newMarkerElement.innerHTML = '<i class="' + iconClass + '"></i>';

            var newMarker = new mapboxgl.Marker(newMarkerElement)
              .setLngLat([newBe.longitude, newBe.latitude])
              .setPopup(new mapboxgl.Popup().setHTML(newPopupContent))
              .addTo(map);

            markers.push({
              id: newBe.id,
              marker: newMarker
            });
          })
          .catch(error => {
            console.error('Error:', error);
          });
        }
        document.getElementById('locationForm').addEventListener('submit', onSubmitLocation);
      });
    }

    function editBe(beId) {
      var be = bes.find(function(b) {
        return b.id == beId;
      });

      var popup = new mapboxgl.Popup({ closeOnClick: false })
        .setLngLat([be.longitude, be.latitude])
        .setHTML('<form id="editForm" class="container">' +
          '<label for="address">Địa chỉ:</label>' +
          '<input type="text" id="address" name="address" value="' + be.address + '"><br><br>' +
          '<label for="loaibe">Loại bể:&nbsp &nbsp</label>' +
          '<select id="loaibe" name="loaibe">' +
            '<option value="Hố ga"' + (be.loaibe == 'Hố ga' ? ' selected' : '') + '>Hố ga</option>' +
            '<option value="Bể cáp 1 đan"' + (be.loaibe == 'Bể cáp 1 đan' ? ' selected' : '') + '>Bể cáp 1 đan</option>' +
            '<option value="Bể cáp 2 đan"' + (be.loaibe == 'Bể cáp 2 đan' ? ' selected' : '') + '>Bể cáp 2 đan</option>' +
          '</select><br>' +
          '<label for="coquan">Đơn vị quản lý:</label>' +
          '<select id="coquan" name="coquan">' +
            '<option value="Hố ga"' + (be.coquan == 'Trung tâm IID' ? ' selected' : '') + '>Trung tâm IID</option>' +
            '<option value="Bể cáp 1 đan"' + (be.coquan == 'Trung tâm đèn THGT' ? ' selected' : '') + '>Trung tâm đèn THGT</option>' +
            '<option value="Bể cáp 2 đan"' + (be.coquan == 'VNPT' ? ' selected' : '') + '>VNPT</option>' +
            '<option value="Bể cáp 1 đan"' + (be.coquan == 'Viettel' ? ' selected' : '') + '>Viettel</option>' +
            '<option value="Bể cáp 2 đan"' + (be.coquan == 'FPT' ? ' selected' : '') + '>FPT</option>' +
          '</select><br>' +
          'Kinh độ: ' + be.longitude + '<br>' +
          'Vĩ độ: ' + be.latitude + '<br><br>' +
          '<div class="d-flex justify-content-center">'+
            '<input type="submit" value="Cập nhật">' +
          '</div>' +
          '</form>').addTo(map);
            
      function onSubmitEdit(event) {
        event.preventDefault();
        var address = document.getElementById('address').value;
        var loaibe = document.getElementById('loaibe').value;
        var coquan = document.getElementById('coquan').value;

        var data = {
          address: address,
          loaibe: loaibe,
          coquan: coquan,
          latitude: be.latitude,
          longitude: be.longitude
        };

        fetch(`/bes/${beId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': getCSRFToken()
          },
          body: JSON.stringify({ be: data })
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            window.location.href = '/bes';
          })
          .catch(error => {
            console.error('Error:', error);
            window.location.href = '/bes';
            alert('Cập nhật hố ga/bể cáp thành công!');
          });
      }
      document.getElementById('editForm').addEventListener('submit', onSubmitEdit);
    }

    function deleteBe(beId) {
      if (confirm("Bạn có chắc chắn muốn xóa hố ga/bể cáp này không?")) {
        fetch(`/bes/${beId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': getCSRFToken()
          }
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            // Xóa marker trên bản đồ
            var markerIndex = markers.findIndex(m => m.id == beId);
            if (markerIndex !== -1) {
              markers[markerIndex].marker.remove();
              markers.splice(markerIndex, 1);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            var markerIndex = markers.findIndex(m => m.id == beId);
            if (markerIndex !== -1) {
              markers[markerIndex].marker.remove();
              markers.splice(markerIndex, 1);
            }
          });
      }
    }

    function zoomIn() {
      map.zoomIn();
    }
    function zoomOut() {
      map.zoomOut();
    }
  </script>
</body>
</html>
