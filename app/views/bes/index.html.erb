<!DOCTYPE html>
<html>
<head>
  <title>Hố ga/bể cáp</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <div id="map" style="height: 93vh;"></div>
  <div class="controls" style="border: 3px solid #15b126; bottom: 50%; right: 0px">
    <button id="addLocationButton" onclick="addLocation()">Thêm</button>
    <button id="completeButton" onclick="completeLocation()" style="display: none;">Xong</button>
    <button onclick="zoomIn()">+</button>
    <button onclick="zoomOut()">-</button>
    <div>
      <%= button_to 'Thêm mới thủ công', new_be_path, method: :get, class: 'btn btn-primary' %>
    <div>
  </div>
  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoibHludGMiLCJhIjoiY2x4M2R6ajdsMHQ0ejJub21xcnMzdWJqNSJ9.nFYWpY_vjwZcPAvMeZAoKw';
    var map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [108.220650, 16.075015], 
      zoom: 17
    });

    var bes = [
      <% @bes.each do |be| %>
        {
          id: '<%= be.id %>',
          address: '<%= j be.address %>',
          loaibe: '<%= j be.loaibe %>',
          coquan: '<%= j be.coquan %>',
          latitude: <%= be.latitude %>,
          longitude: <%= be.longitude %>
        },
      <% end %>
    ];

    var markers = [];
    bes.forEach(function(be) {
      var iconClass;
      var markerClass = 'map-marker'; // Default class

      switch (be.loaibe) {
        case 'Bể cáp 1 đan':
          iconClass = 'fa-solid';
          markerClass += ' rectangular-marker'; // Add rectangular class
          break;
        case 'Bể cáp 2 đan':
          iconClass = 'fa-solid fa-minus';
          markerClass += ' rectangular-marker';
          break;
        case 'Hố ga':
          iconClass = 'fa-regular'; 
          break;
      }
      
        var popupContent = `
          <p>Loại bể:&nbsp;${be.loaibe}</p>
          <p>Đơn vị quản lý:&nbsp;${be.coquan}</p>
          <p>Kinh độ:&nbsp;${be.longitude}</p>
          <p>Vĩ độ:&nbsp;${be.latitude}</p>
          ${be.address ? `<p>Ghi chú:&nbsp;${be.address}</p>` : ''} <!-- Kiểm tra nếu address không phải null -->
          <div style="text-align: center;">
            <button class="btn btn-primary mr-2" onclick="editBe('${be.id}')">Chỉnh sửa</button>
            <button class="btn btn-danger delete-be" data-id="${be.id}">Xóa</button>
          </div>
        `;
      // Create a custom marker with FontAwesome icon
      var markerElement = document.createElement('div');
      markerElement.className = markerClass;
      markerElement.innerHTML = '<i class="' + iconClass + '"></i>';

      var marker = new mapboxgl.Marker(markerElement)
        .setLngLat([be.longitude, be.latitude])
        .setPopup(new mapboxgl.Popup().setHTML(popupContent))
        .addTo(map);

      markers.push({
        id: be.id,
        marker: marker
      });
      // Event listener for delete button
      marker.getPopup().on('open', function() {
        document.querySelector('.delete-be[data-id="' + be.id + '"]').addEventListener('click', function() {
          var beId = this.getAttribute('data-id');

          if (confirm('Bạn có chắc chắn muốn xóa bể này không?')) {
            // Send delete request
            fetch(`/bes/${beId}`, {
              method: 'DELETE',
              headers: {
                'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
              }
            })
            .then(response => {
              if (response.ok) {
                // Remove the marker from the map
                marker.remove();

                // Optionally show a success message
                alert('Bể đã được xóa thành công.');
              } else {
                throw new Error('Lỗi khi xóa bể');
              }
            })
            .catch(error => {
              console.error('Lỗi:', error);
              alert('Bạn không thể xóa bản ghi vì nó đang được tham chiếu ở bảng khác.');
            });
          }
        });
      });
    });

    function completeLocation() {
      // Reload the page
      location.reload();
    }

    let isAddingLocation = false;

    function addLocation() {
      // Chuyển đổi trạng thái thêm vị trí
      isAddingLocation = !isAddingLocation;

      if (isAddingLocation) {
        // Đổi màu nút thành đỏ
        document.getElementById('addLocationButton').style.backgroundColor = 'red';

        // Cho phép nhấn vào bản đồ
        map.on('click', handleMapClick);
      } else {
        // Đổi màu nút về bình thường
        document.getElementById('addLocationButton').style.backgroundColor = '';

        // Gỡ bỏ sự kiện nhấn vào bản đồ
        map.off('click', handleMapClick);
        
        // Ẩn nút "Xong"
        document.getElementById('completeButton').style.display = 'none';
        
        // Đóng popup nếu có
        if (currentPopup) {
          currentPopup.remove();
          currentPopup = null;
        }
      }
    }

    function handleMapClick(e) {
      var lng = e.lngLat.lng.toFixed(6);
      var lat = e.lngLat.lat.toFixed(6);

      // Đổi màu nút thành xanh sau khi nhấn vào bản đồ
      document.getElementById('addLocationButton').style.backgroundColor = 'blue';

      // Hiển thị nút "Xong"
      document.getElementById('completeButton').style.display = 'inline-block';

      var popup = new mapboxgl.Popup()
        .setLngLat(e.lngLat)
        .setHTML(
          '<div class="formbg">'+
          '<div class="formbg-inner padding-horizontal--48">'+
            '<form id="locationForm" class="container">' +
              '<div class="field padding-bottom--24">'+
                '<label for="loaibe">Loại bể:</label>'+
                '<select class="form-control" id="loaibe" name="loaibe" required>' +
                  '<option value="" disabled selected>Chọn loại bể</option>' +
                  '<option value="Hố ga">Hố ga</option>' +
                  '<option value="Bể cáp 1 đan">Bể cáp 1 đan</option>' +
                  '<option value="Bể cáp 2 đan">Bể cáp 2 đan</option>' +
                '</select>' +
              '</div>'+
              '<div class="field padding-bottom--24">'+
                '<label for="coquan">Đơn vị quản lý:</label>'+
                '<select class="form-control" id="coquan" name="coquan" required>' +
                  '<option value="" disabled selected>Đơn vị quản lý</option>' +
                  '<option value="Trung tâm IID">Trung tâm IID</option>' +
                  '<option value="Trung tâm đèn THGT">Trung tâm đèn THGT</option>' +
                  '<option value="VNPT">VNPT</option>' +
                  '<option value="Viettel">Viettel</option>' +
                  '<option value="FPT">FPT</option>' +
                '</select>' +
              '</div>'+
              '<div class="field padding-bottom--24">'+
                '<label for="address">Ghi chú:</label>'+
                '<input type="text" id="address" name="address"' +
              '</div><br><br>'+
              'Kinh độ: ' + lng + '<br>' +
              'Vĩ độ: ' + lat + '<br><br>' +
              '<div class="d-flex justify-content-center">' +
                '<input class="btn btn-primary" type="submit" value="Gửi">' + 
              '</div>' +
            '</form>' +
          '</div>'+
          '</div>') 
        .addTo(map);

      function onSubmitLocation(event) {
        event.preventDefault();
        var address = document.getElementById('address').value;
        var loaibe = document.getElementById('loaibe').value;
        var coquan = document.getElementById('coquan').value;

        var data = {
          address: address,
          loaibe: loaibe,
          coquan: coquan,
          latitude: lat,
          longitude: lng
        };

        fetch('/bes', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': getCSRFToken()
          },
          body: JSON.stringify({ be: data })
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          return response.json();
        })
        .then(newBe => {
          // Đóng popup sau khi gửi thành công
          popup.remove();

          var iconClass;
          var markerClass = 'map-marker'; // Default class

          switch (newBe.loaibe) {
            case 'Bể cáp 1 đan':
              iconClass = 'fa-solid';
              markerClass += ' rectangular-marker'; // Add rectangular class
              break;
            case 'Bể cáp 2 đan':
              iconClass = 'fa-solid fa-minus';
              markerClass += ' rectangular-marker';
              break;
            case 'Hố ga':
              iconClass = 'fa-regular'; 
              break;
          }

          var newPopupContent = '<p>ID: ' + newBe.id + '</p>' +
            '<p>' + newBe.loaibe + '</p>' +
            '<p>' + newBe.address + '</p>' +
            '<p>' + newBe.coquan + '</p>' +
            '<p>Kinh độ: ' + newBe.longitude + '</p>' +
            '<p>Vĩ độ: ' + newBe.latitude + '</p>';

          var newMarkerElement = document.createElement('div');
          newMarkerElement.className = markerClass;
          newMarkerElement.innerHTML = '<i class="' + iconClass + '"></i>';

          var newMarker = new mapboxgl.Marker(newMarkerElement)
            .setLngLat([newBe.longitude, newBe.latitude])
            .setPopup(new mapboxgl.Popup().setHTML(newPopupContent))
            .addTo(map);

          markers.push({
            id: newBe.id,
            marker: newMarker
          });

          // Đặt lại popup cho phép thêm vị trí tiếp theo
          document.getElementById('locationForm').reset();
          document.getElementById('address').focus();
        })
        .catch(error => {
          console.error('Lỗi:', error);
        });
      }

      document.getElementById('locationForm').addEventListener('submit', onSubmitLocation);
    }

    function editBe(beId) {
      var be = bes.find(function(b) {
        return b.id == beId;
      });

      // Close the existing popup (if any)
      var existingPopup = markers.find(function(marker) {
        return marker.id === beId;
      });
      if (existingPopup && existingPopup.marker.getPopup().isOpen()) {
        existingPopup.marker.getPopup().remove();
      }

      var popup = new mapboxgl.Popup({ closeOnClick: false })
        .setLngLat([be.longitude, be.latitude])
        .setHTML('<form id="editForm" class="container">' +
          ' <div>'+
            '<label class="label-loaibe">' +
              '<span>Loại bể</span>' +
              '<select id="loaibe" name="loaibe" tabindex="2" required>' +
                '<option value="Hố ga"' + (be.loaibe == 'Hố ga' ? ' selected' : '') + '>Hố ga</option>' +
                '<option value="Bể cáp 1 đan"' + (be.loaibe == 'Bể cáp 1 đan' ? ' selected' : '') + '>Bể cáp 1 đan</option>' +
                '<option value="Bể cáp 2 đan"' + (be.loaibe == 'Bể cáp 2 đan' ? ' selected' : '') + '>Bể cáp 2 đan</option>' +
              '</select>' +
            '</label>'+
          '</div>'+
          ' <div>'+
            '<label class="label-coquan">' +
              '<span>Đơn vị quản lý</span>'+
              '<select id="coquan" name="coquan" tabindex="3" required>' +
                '<option value="Hố ga"' + (be.coquan == 'Trung tâm IID' ? ' selected' : '') + '>Trung tâm IID</option>' +
                '<option value="Bể cáp 1 đan"' + (be.coquan == 'Trung tâm đèn THGT' ? ' selected' : '') + '>Trung tâm đèn THGT</option>' +
                '<option value="Bể cáp 2 đan"' + (be.coquan == 'VNPT' ? ' selected' : '') + '>VNPT</option>' +
                '<option value="Bể cáp 1 đan"' + (be.coquan == 'Viettel' ? ' selected' : '') + '>Viettel</option>' +
                '<option value="Bể cáp 2 đan"' + (be.coquan == 'FPT' ? ' selected' : '') + '>FPT</option>' +
              '</select>' +
            '</label>'+
          '</div>'+
          '<div>'+
            '<label class="label-address">'+
              '<span class="required">Ghi chú</span>' +
              '<input type="text" id="address" name="address" value="' + be.address + '">' +
            '</label>'+
          '</div>'+
          '<div class="coordinates">'+
            'Kinh độ: ' + be.longitude + '<br>' +
            'Vĩ độ: ' + be.latitude + '<br>' +
          '</div>'+
          '<div class="submit-container">'+
            '<input class="sub-container" type="submit" value="Cập nhật">' +
          '</div>' +
          '</form>').addTo(map);
            
      function onSubmitEdit(event) {
        event.preventDefault();
        var address = document.getElementById('address').value;
        var loaibe = document.getElementById('loaibe').value;
        var coquan = document.getElementById('coquan').value;

        var data = {
          address: address,
          loaibe: loaibe,
          coquan: coquan,
          latitude: be.latitude,
          longitude: be.longitude
        };

        fetch(`/bes/${beId}`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': getCSRFToken()
          },
          body: JSON.stringify({ be: data })
        })
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            window.location.href = '/bes';
          })
          .catch(error => {
            console.error('Error:', error);
            window.location.href = '/bes';
            alert('Cập nhật hố ga/bể cáp thành công!');
          });
      }
      document.getElementById('editForm').addEventListener('submit', onSubmitEdit);
    }

    function zoomIn() {
      map.zoomIn();
    }
    function zoomOut() {
      map.zoomOut();
    }
  </script>
</body>
</html>
